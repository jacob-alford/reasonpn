// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var RpnReducer$Reasonpn = require("../src/RpnReducer.bs.js");

Jest.describe("rpnReducer() > Empty", (function (param) {
        Jest.test("Enter", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 5.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: /* [] */0
                                  }, {
                                    TAG: /* Enter */0,
                                    _0: 5.0
                                  })));
              }));
        Jest.test("Drop", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, /* Drop */0)));
              }));
        Jest.test("Act1", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Exp */0
                                  })));
              }));
        return Jest.test("Act2", (function (param) {
                      return Jest.Expect.toEqual({
                                  stack: /* [] */0,
                                  tape: {
                                    hd: "Entered 5",
                                    tl: /* [] */0
                                  }
                                }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                          stack: /* [] */0,
                                          tape: {
                                            hd: "Entered 5",
                                            tl: /* [] */0
                                          }
                                        }, {
                                          TAG: /* Act2 */2,
                                          _0: /* Add */0
                                        })));
                    }));
      }));

Jest.describe("rpnReducer() > Nonempty", (function (param) {
        Jest.test("Enter", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 5.0,
                              tl: {
                                hd: 6.0,
                                tl: /* [] */0
                              }
                            },
                            tape: {
                              hd: "Entered 5",
                              tl: {
                                hd: "Entered 6",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 6.0,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 6",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Enter */0,
                                    _0: 5.0
                                  })));
              }));
        Jest.test("Drop", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Dropped 69.9",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 69.9,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, /* Drop */0)));
              }));
        Jest.test("Act1 > Exp", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 2.718281828459045,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "exp(1)",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 1.0,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Exp */0
                                  })));
              }));
        Jest.test("Act1 > Sin", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 1.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "sin(1.57079632698)",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 1.57079632698,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Sin */1
                                  })));
              }));
        Jest.test("Act1 > Cos", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: -1.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "cos(3.141592653)",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 3.141592653,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Cos */2
                                  })));
              }));
        Jest.test("Act1 > Tan", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: -5.897932257097086e-10,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "tan(3.141592653)",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 3.141592653,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Tan */3
                                  })));
              }));
        Jest.test("Act1 > Asin > NaN", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 30.0,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Asin */4
                                  })));
              }));
        Jest.test("Act1 > Asin", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 0.5235987755982989,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "asin(0.5)",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 0.5,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Asin */4
                                  })));
              }));
        Jest.test("Act1 > Acos > NaN", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 30.0,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Acos */5
                                  })));
              }));
        Jest.test("Act1 > Acos", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 1.0471975511965979,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "acos(0.5)",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 0.5,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Acos */5
                                  })));
              }));
        Jest.test("Act1 > Atan", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 0.4636476090008061,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "atan(0.5)",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 0.5,
                                      tl: /* [] */0
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act1 */1,
                                    _0: /* Atan */6
                                  })));
              }));
        Jest.test("Act2 > Add > Empty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Add */0
                                  })));
              }));
        Jest.test("Act2 > Add > Nonempty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 3.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "1+2",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 1.0,
                                      tl: {
                                        hd: 2.0,
                                        tl: /* [] */0
                                      }
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Add */0
                                  })));
              }));
        Jest.test("Act2 > Sub > Empty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Sub */1
                                  })));
              }));
        Jest.test("Act2 > Sub > Nonempty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: -1.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "1-2",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 1.0,
                                      tl: {
                                        hd: 2.0,
                                        tl: /* [] */0
                                      }
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Sub */1
                                  })));
              }));
        Jest.test("Act2 > Mul > Empty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Mul */2
                                  })));
              }));
        Jest.test("Act2 > Mul > Nonempty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 2.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "1*2",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 1.0,
                                      tl: {
                                        hd: 2.0,
                                        tl: /* [] */0
                                      }
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Mul */2
                                  })));
              }));
        Jest.test("Act2 > Div > Empty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Div */3
                                  })));
              }));
        Jest.test("Act2 > Div > Nonempty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 0.5,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "1\xc3\xb72",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 2.0,
                                      tl: {
                                        hd: 1.0,
                                        tl: /* [] */0
                                      }
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Div */3
                                  })));
              }));
        Jest.test("Act2 > Xy > Empty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Xy */4
                                  })));
              }));
        Jest.test("Act2 > Xy > Nonempty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 4.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "2^2",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 2.0,
                                      tl: {
                                        hd: 2.0,
                                        tl: /* [] */0
                                      }
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* Xy */4
                                  })));
              }));
        Jest.test("Act2 > XrtY > Empty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* XrtY */5
                                  })));
              }));
        Jest.test("Act2 > XrtY > Nonempty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 10.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "100^(1/2)",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 2.0,
                                      tl: {
                                        hd: 100.0,
                                        tl: /* [] */0
                                      }
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* XrtY */5
                                  })));
              }));
        Jest.test("Act2 > LogXY > Empty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: /* [] */0,
                            tape: {
                              hd: "Entered 5",
                              tl: /* [] */0
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: /* [] */0,
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* LogXY */6
                                  })));
              }));
        Jest.test("Act2 > LogXY > Nonempty", (function (param) {
                return Jest.Expect.toEqual({
                            stack: {
                              hd: 1.0,
                              tl: /* [] */0
                            },
                            tape: {
                              hd: "log_10^10",
                              tl: {
                                hd: "Entered 5",
                                tl: /* [] */0
                              }
                            }
                          }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                    stack: {
                                      hd: 10.0,
                                      tl: {
                                        hd: 10.0,
                                        tl: /* [] */0
                                      }
                                    },
                                    tape: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }, {
                                    TAG: /* Act2 */2,
                                    _0: /* LogXY */6
                                  })));
              }));
        return Jest.test("Act2 > LogXY > NaN", (function (param) {
                      return Jest.Expect.toEqual({
                                  stack: {
                                    hd: 0.0,
                                    tl: /* [] */0
                                  },
                                  tape: {
                                    hd: "log_-1^10",
                                    tl: {
                                      hd: "Entered 5",
                                      tl: /* [] */0
                                    }
                                  }
                                }, Jest.Expect.expect(RpnReducer$Reasonpn.rpnReducer({
                                          stack: {
                                            hd: -1.0,
                                            tl: {
                                              hd: 10.0,
                                              tl: /* [] */0
                                            }
                                          },
                                          tape: {
                                            hd: "Entered 5",
                                            tl: /* [] */0
                                          }
                                        }, {
                                          TAG: /* Act2 */2,
                                          _0: /* LogXY */6
                                        })));
                    }));
      }));

/*  Not a pure module */
